apiVersion: apps/v1
kind: Deployment
metadata:
  name: myk8sapp
  labels:
    app: myk8sapp
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: myk8sapp
  template:
    metadata:
      labels:
        app: myk8sapp
    spec:
      containers:
        - name: myk8sapp
          image: epamsergiimoroz1/k8s_app:latest
          env:
          - name: MONGO_HOST
            value: srv-mongo
          - name: MONGO_PORT
            value: '27017'
          - name: MONGO_USERNAME
            value: root
          - name: MONGO_PASSWORD
            value: example
          - name: BG_COLOR
            value: green
          - name: FAIL_FLAG
            value: 'false'
          resources:
            requests:
              memory: "64Mi"
              cpu: "0.2"
            limits:
              memory: "128Mi"
              cpu: "0.5"
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
          readinessProbe:
            timeoutSeconds: 3
            httpGet:
              path: /healthx
              port: 5000
      imagePullSecrets:
      - name: epamsergiimoroz1

---
apiVersion: v1
kind: Service
metadata:
  name: srv-myk8sapp
spec:
  type: LoadBalancer
  selector:
    app: myk8sapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: srv-mongo
spec:
  type: LoadBalancer
  selector:
    app: mongo
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
spec:
  ingressClassName: nginx
  rules:
  - host: "local.myk8sapp.com"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: srv-myk8sapp
            port:
              number: 80
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:jammy
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: example
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.2"
          limits:
            memory: "256Mi"
            cpu: "0.5"
        ports:
        - containerPort: 27017
